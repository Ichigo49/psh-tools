<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dbatools</name>
    </assembly>
    <members>
        <member name="T:Sqlcollaborative.Dbatools.Computer.DiskSpace">
            <summary>
            Data Container for the output of Get-DbaDiskSpace
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.ComputerName">
            <summary>
            The computer that was scanned
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.Name">
            <summary>
            Name of the disk
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.Label">
            <summary>
            Label of the disk
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.Capacity">
            <summary>
            What's the total capacity of the disk?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.Free">
            <summary>
            How much is still free?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.PercentFree">
            <summary>
            How much is still free
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.BlockSize">
            <summary>
            What blocksize is the object set to
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FileSystem">
            <summary>
            What filesystem is installed on the system
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.Type">
            <summary>
            What kind of drive is it?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.IsSqlDisk">
            <summary>
            Whether the drive is a sql disk. Nullable, because it is an optional property and may not always be included, thus a third state is necessary.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.Server">
            <summary>
            The computer that was scanned. Legacy-Name
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.DriveType">
            <summary>
            The type of drive this is in the legacy string notation
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.SizeInBytes">
            <summary>
            The total capacity in Bytes
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FreeInBytes">
            <summary>
            The free space in Bytes
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.SizeInKB">
            <summary>
            The total capacity in KB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FreeInKB">
            <summary>
            The free space in KB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.SizeInMB">
            <summary>
            The total capacity in MB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FreeInMB">
            <summary>
            The free space in MB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.SizeInGB">
            <summary>
            The total capacity in GB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FreeInGB">
            <summary>
            The free space in GB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.SizeInTB">
            <summary>
            The total capacity in TB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FreeInTB">
            <summary>
            The free space in TB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.SizeInPB">
            <summary>
            The total capacity in PB
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Computer.DiskSpace.FreeInPB">
            <summary>
            The free space in PB
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Computer.DriveType">
            <summary>
            What kind of drive are you?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.Unknown">
            <summary>
            The drive type is not actually known
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.NoRootDirectory">
            <summary>
            The drive has no root directory
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.RemovableDisk">
            <summary>
            The drive is a removable disk
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.LocalDisk">
            <summary>
            The drive is a local disk
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.NetworkDrive">
            <summary>
            The drive is a network drive
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.CompactDisk">
            <summary>
            The drive is a compact disk
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Computer.DriveType.RAMDisk">
            <summary>
            The drive is a RAM disk
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Configuration.ConfigScope">
            <summary>
            The location where a setting was applied
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Configuration.ConfigScope.UserDefault">
            <summary>
            The configuration is set as default value for the user
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Configuration.ConfigScope.UserMandatory">
            <summary>
            The configuration is enforced for the user
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Configuration.ConfigScope.SystemDefault">
            <summary>
            The configuration is set as default value for all users on the system
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Configuration.ConfigScope.SystemMandatory">
            <summary>
            The configuration is enforced for all users on the system.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Configuration.ConfigurationHost">
            <summary>
            Host class providing static configuration settings that are constant across all runspaces within the process.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Configuration.ConfigurationHost.Configurations">
            <summary>
            Hashtable containing all the configuration entries
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Configuration.ConfigurationHost.Validation">
            <summary>
            Hashtable containing all the registered validations
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.ConfigurationHost.ImportFromRegistryDone">
            <summary>
            Whether the import from registry has been completed. Prevents multiple imports and overwrites when importing the module multiple times.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Configuration.Config">
            <summary>
            Configuration Manager as well as individual configuration object.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Name">
            <summary>
            The Name of the setting
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.FullName">
            <summary>
            The full name of the configuration entry, comprised of both Module and Name.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Module">
            <summary>
            The module of the setting. Helps being able to group configurations.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Description">
            <summary>
            A description of the specific setting
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Type">
            <summary>
            The data type of the value stored in the configuration element.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Value">
            <summary>
            The value stored in the configuration element
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Handler">
            <summary>
            The handler script that is run whenever the configuration value is set.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Validation">
            <summary>
            Validates the user input
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Hidden">
            <summary>
            Setting this to true will cause the element to not be discovered unless using the '-Force' parameter on "Get-DbaConfig"
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.Initialized">
            <summary>
            Whether the setting has been initialized. This handles module imports and avoids modules overwriting settings when imported in multiple runspaces.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.PolicySet">
            <summary>
            Whether this setting was set by policy
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.PolicyEnforced">
            <summary>
            Whether this setting was set by policy and forbids deletion.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Configuration.Config.RegistryData">
            <summary>
            The finalized value to put into the registry value when using policy to set this setting.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Database.BackupHistory">
            <summary>
            Object containing the information about the history of mankind ... or a database backup. WHo knows.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.ComputerName">
            <summary>
            The name of the computer running MSSQL Server
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.InstanceName">
            <summary>
            The Instance that was queried
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.SqlInstance">
            <summary>
            The full Instance name as seen from outside
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Database">
            <summary>
            The Database that was backed up
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.UserName">
            <summary>
            The user that is running the backup
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Start">
            <summary>
            When was the backup started
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.End">
            <summary>
            When did the backup end
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Duration">
            <summary>
            What was the longest duration among the backups
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Path">
            <summary>
            Where is the backup stored
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.TotalSize">
            <summary>
            What is the total size of the backup
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Type">
            <summary>
            The kind of backup this was
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.BackupSetId">
            <summary>
            The ID for the Backup job
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.DeviceType">
            <summary>
            What kind of backup-device was the backup stored to
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Software">
            <summary>
            What is the name of the backup software?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.FullName">
            <summary>
            The full name of the backup
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.FileList">
            <summary>
            The files that are part of this backup
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.Position">
            <summary>
            The position of the backup
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.FirstLsn">
            <summary>
            The first Log Sequence Number
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.DatabaseBackupLsn">
            <summary>
            The Log Squence Number that marks the beginning of the backup
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.CheckpointLsn">
            <summary>
            The checkpoint's Log Sequence Number
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.LastLsn">
            <summary>
            The last Log Sequence Number
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.SoftwareVersionMajor">
            <summary>
            The primary version number of the Sql Server
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.IsCopyOnly">
            <summary>
            Was the backup performed with the CopyOnlyOption
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.BackupHistory.LastRecoveryForkGUID">
            <summary>
            Recovery Fork backup was takeon
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Database.Dependency">
            <summary>
            Class containing all dependency information over a database object
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.ComputerName">
            <summary>
            The name of the SQL server from whence the query came
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.ServiceName">
            <summary>
            Name of the service running the database containing the dependency
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.SqlInstance">
            <summary>
            The Instance the database containing the dependency is running in.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Dependent">
            <summary>
            The name of the dependent
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Type">
            <summary>
            The kind of object the dependent is
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Owner">
            <summary>
            The owner of the dependent (usually the Database)
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.IsSchemaBound">
            <summary>
            Whether the dependency is Schemabound. If it is, then the creation statement order is of utmost importance.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Parent">
            <summary>
            The immediate parent of the dependent. Useful in multi-tier dependencies.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.ParentType">
            <summary>
            The type of object the immediate parent is.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Script">
            <summary>
            The script used to create the object.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Tier">
            <summary>
            The tier in the dependency hierarchy tree. Used to determine, which dependency must be applied in which order.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Object">
            <summary>
            The smo object of the dependent.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.Urn">
            <summary>
            The Uniform Resource Name of the dependent.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Database.Dependency.OriginalResource">
            <summary>
            The object of the original resource, from which the dependency hierachy has been calculated.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Connection.ConnectionHost">
            <summary>
            Provides static tools for managing connections
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.Connections">
            <summary>
            List of all registered connections.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.BadConnectionTimeout">
            <summary>
            The time interval that must pass, before a connection using a known to not work connection protocol is reattempted
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableCache">
            <summary>
            Globally disables all caching done by the Computer Management functions.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableBadCredentialCache">
            <summary>
            Disables the caching of bad credentials. dbatools caches bad logon credentials for wmi/cim and will not reuse them.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableCredentialAutoRegister">
            <summary>
            Disables the automatic registration of working credentials. dbatools will caches the last working credential when connecting using wmi/cim and will use those rather than using known bad credentials
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.OverrideExplicitCredential">
            <summary>
            Enabling this will force the use of the last credentials known to work, rather than even trying explicit credentials.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.EnableCredentialFailover">
            <summary>
            Enables automatic failover to working credentials, when passed credentials either are known, or turn out to not work.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableCimPersistence">
            <summary>
            Globally disables the persistence of Cim sessions used to connect to a target system.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableConnectionCimRM">
            <summary>
            Whether the CM connection using Cim over WinRM is disabled globally
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableConnectionCimDCOM">
            <summary>
            Whether the CM connection using Cim over DCOM is disabled globally
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableConnectionWMI">
            <summary>
            Whether the CM connection using WMI is disabled globally
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.DisableConnectionPowerShellRemoting">
            <summary>
            Whether the CM connection using PowerShell Remoting is disabled globally
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ConnectionHost.SqlConnectionTimeout">
            <summary>
            The number of seconds before a sql connection attempt times out
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Connection.ManagementConnection">
            <summary>
            Contains management connection information for a windows server
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.ComputerName">
            <summary>
            The computer to connect to
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.DisableBadCredentialCache">
            <summary>
            Locally disables the caching of bad credentials
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.DisableCredentialAutoRegister">
            <summary>
            Locally disables the caching of working credentials
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.OverrideExplicitCredential">
            <summary>
            Locally overrides explicit credentials with working ones that were cached
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.EnableCredentialFailover">
            <summary>
            Locally enables automatic failover to working credentials, when passed credentials either are known, or turn out to not work.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.DisableCimPersistence">
            <summary>
            Locally disables the persistence of Cim sessions used to connect to a target system.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.DisabledConnectionTypes">
            <summary>
            Connectiontypes that will never be used
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.RestoreDefaultConfiguration">
            <summary>
            Restores all deviations from public policy back to default
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.OverrideConnectionPolicy">
            <summary>
            Whether this connection adhers to the global connection lockdowns or not
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.CimRM">
            <summary>
            Did the last connection attempt using CimRM work?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.LastCimRM">
            <summary>
            When was the last connection attempt using CimRM?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.CimDCOM">
            <summary>
            Did the last connection attempt using CimDCOM work?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.LastCimDCOM">
            <summary>
            When was the last connection attempt using CimRM?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.Wmi">
            <summary>
            Did the last connection attempt using Wmi work?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.LastWmi">
            <summary>
            When was the last connection attempt using CimRM?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.PowerShellRemoting">
            <summary>
            Did the last connection attempt using PowerShellRemoting work?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.LastPowerShellRemoting">
            <summary>
            When was the last connection attempt using CimRM?
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.ReportSuccess(Sqlcollaborative.Dbatools.Connection.ManagementConnectionType)">
            <summary>
            Report the successful connection against the computer of this connection
            </summary>
            <param name="Type">What connection type succeeded?</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.ReportFailure(Sqlcollaborative.Dbatools.Connection.ManagementConnectionType)">
            <summary>
            Report the failure of connecting to the target computer
            </summary>
            <param name="Type">What connection type failed?</param>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.Credentials">
            <summary>
            Any registered credentials to use on the connection.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.WindowsCredentialsAreBad">
            <summary>
            Whether the default windows credentials are known to not work against the target.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.UseWindowsCredentials">
            <summary>
            Whether windows credentials are known to be good. Do not build conditions on them being false, just on true.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnection.KnownBadCredentials">
            <summary>
            Credentials known to not work. They will not be used when specified.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.AddBadCredential(System.Management.Automation.PSCredential)">
            <summary>
            Adds a credentials object to the list of credentials known to not work.
            </summary>
            <param name="Credential">The bad credential that must be punished</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.AddGoodCredential(System.Management.Automation.PSCredential)">
            <summary>
            Reports a credentials object as being legit.
            </summary>
            <param name="Credential">The functioning credential that we may want to use again</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetCredential(System.Management.Automation.PSCredential)">
            <summary>
            Calculates, which credentials to use. Will consider input, compare it with know not-working credentials or use the configured working credentials for that.
            </summary>
            <param name="Credential">Any credential object a user may have explicitly specified.</param>
            <returns>The Credentials to use</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.IsBadCredential(System.Management.Automation.PSCredential)">
            <summary>
            Tests whether the input credential is on the list known, bad credentials
            </summary>
            <param name="Credential">The credential to test</param>
            <returns>True if the credential is known to not work, False if it is not yet known to not work</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.RemoveBadCredential(System.Management.Automation.PSCredential)">
            <summary>
            Removes an item from the list of known bad credentials
            </summary>
            <param name="Credential">The credential to remove</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetConnectionType(Sqlcollaborative.Dbatools.Connection.ManagementConnectionType,System.Boolean)">
            <summary>
            Returns the next connection type to try.
            </summary>
            <param name="ExcludedTypes">Exclude any type already tried and failed</param>
            <param name="Force">Overrides the timeout on bad connections</param>
            <returns>The next type to try.</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetConnectionTypesTimed(System.DateTime)">
            <summary>
            Returns a list of all available connection types whose inherent timeout has expired.
            </summary>
            <param name="Timestamp">All last connection failures older than this point in time are considered to be expired</param>
            <returns>A list of all valid connection types</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetConnectionTypesTimed(System.TimeSpan)">
            <summary>
            Returns a list of all available connection types whose inherent timeout has expired.
            </summary>
            <param name="Timespan">All last connection failures older than this far back into the past are considered to be expired</param>
            <returns>A list of all valid connection types</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.#ctor">
            <summary>
            Creates a new, empty connection object. Necessary for serialization.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.#ctor(System.String)">
            <summary>
            Creates a new default connection object, containing only its computer's name and default results.
            </summary>
            <param name="ComputerName">The computer targeted. Will be forced to lowercase.</param>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.CimWinRMOptions">
            <summary>
            The options ot use when establishing a CIM Session
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetDefaultCimWsmanOptions">
            <summary>
            Returns the default wsman options object
            </summary>
            <returns>Something very default-y</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetCimRMInstance(System.Management.Automation.PSCredential,System.String,System.String)">
            <summary>
            Get all cim instances of the appropriate class using WinRM
            </summary>
            <param name="Credential">The credentiuls to use for the connection.</param>
            <param name="Class">The class to query.</param>
            <param name="Namespace">The namespace to look in (defaults to root\cimv2).</param>
            <returns>Hopefully a mountainload of CimInstances</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.QueryCimRMInstance(System.Management.Automation.PSCredential,System.String,System.String,System.String)">
            <summary>
            Get all cim instances matching the query using WinRM
            </summary>
            <param name="Credential">The credentiuls to use for the connection.</param>
            <param name="Query">The query to use requesting information.</param>
            <param name="Dialect">Defaults to WQL.</param>
            <param name="Namespace">The namespace to look in (defaults to root\cimv2).</param>
            <returns></returns>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Connection.ManagementConnection.CimDComOptions">
            <summary>
            The options ot use when establishing a CIM Session
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetDefaultCimDcomOptions">
            <summary>
            Returns the default DCom options object
            </summary>
            <returns>Something very default-y</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.GetCimDComInstance(System.Management.Automation.PSCredential,System.String,System.String)">
            <summary>
            Get all cim instances of the appropriate class using DCOM
            </summary>
            <param name="Credential">The credentiuls to use for the connection.</param>
            <param name="Class">The class to query</param>
            <param name="Namespace">The namespace to look in (defaults to root\cimv2)</param>
            <returns>Hopefully a mountainload of CimInstances</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.QueryCimDCOMInstance(System.Management.Automation.PSCredential,System.String,System.String,System.String)">
            <summary>
            Get all cim instances matching the query using DCOM
            </summary>
            <param name="Credential">The credentiuls to use for the connection.</param>
            <param name="Query">The query to use requesting information.</param>
            <param name="Dialect">Defaults to WQL.</param>
            <param name="Namespace">The namespace to look in (defaults to root\cimv2).</param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Connection.ManagementConnection.ToString">
            <summary>
            Simple string representation
            </summary>
            <returns>Returns the computerName it is connection for</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Connection.ManagementConnectionProtocolState">
            <summary>
            The various types of state a connection-protocol may have
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionProtocolState.Unknown">
            <summary>
            The default initial state, before any tests are performed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionProtocolState.Success">
            <summary>
            A successful connection was last established
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionProtocolState.Error">
            <summary>
            Connecting using the relevant protocol failed last it was tried
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionProtocolState.Disabled">
            <summary>
            The relevant protocol has been disabled and should not be used
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Connection.ManagementConnectionType">
            <summary>
            The various ways to connect to a windows server fopr management purposes.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionType.None">
            <summary>
            No Connection-Type
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionType.CimRM">
            <summary>
            Cim over a WinRM connection
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionType.CimDCOM">
            <summary>
            Cim over a DCOM connection
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionType.Wmi">
            <summary>
            WMI Connection
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.ManagementConnectionType.PowerShellRemoting">
            <summary>
            Connecting with PowerShell remoting and performing WMI queries locally
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Connection.SqlConnectionProtocol">
            <summary>
            The protocol to connect over via SMO
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.SqlConnectionProtocol.Any">
            <summary>
            Connect using any protocol available
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.SqlConnectionProtocol.TCP">
            <summary>
            Connect using TCP/IP
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Connection.SqlConnectionProtocol.NP">
            <summary>
            Connect using named pipes or shared memory
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.StartTimeEntry">
            <summary>
            Entry containing the information of a step during the import sequence
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.StartTimeEntry.Action">
            <summary>
            The action that has been taken
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.StartTimeEntry.Timestamp">
            <summary>
            When was the action taken?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.StartTimeEntry.Runspace">
            <summary>
            The runspace the entry was written on
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.StartTimeEntry.#ctor(System.String,System.DateTime,System.Guid)">
            <summary>
            Creates a new StartTimeEntry
            </summary>
            <param name="Action">The action that has been taken</param>
            <param name="Timestamp">When was the action taken?</param>
            <param name="Runspace">The runspace the entry was written on</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.StartTimeResult">
            <summary>
            The processed result how long a given step took
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.StartTimeResult.Action">
            <summary>
            What action was taken?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.StartTimeResult.Duration">
            <summary>
            How long did things take?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.StartTimeResult.Start">
            <summary>
            When did this action start?
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.StartTimeResult.End">
            <summary>
            When did this action end?
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.StartTimeResult.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            Creates a new StartTimeResult with all values preconfigured
            </summary>
            <param name="Action">The action that was taken</param>
            <param name="Start">When did the action start?</param>
            <param name="End">When did the action end?</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.SystemHost">
            <summary>
            Provides system-wide static resources regarding the dbatools system runtime in general
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.SystemHost.UnattendedMode">
            <summary>
            When this is set to true, functions must assume dbatools is in unattended mode. May not ask for user input of any kind.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.SystemHost.ModuleBase">
            <summary>
            Path where the module was located when imported
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.SystemHost.ModuleImported">
            <summary>
            Flag whether the module has ever been imported in the current process. If that is true, several things (such as importing libraries) is no longer necessary and will be skipped on import.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord">
            <summary>
            An error record written by dbatools
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.CategoryInfo">
            <summary>
            The category of the error
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.ErrorDetails">
            <summary>
            The details on the error
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.Exception">
            <summary>
            The actual exception thrown
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.FullyQualifiedErrorId">
            <summary>
            The specific error identity, used to identify the target
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.InvocationInfo">
            <summary>
            The details of how this was called.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.ScriptStackTrace">
            <summary>
            The script's stacktrace
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.TargetObject">
            <summary>
            The object being processed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.FunctionName">
            <summary>
            The name of the function throwing the error
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.Timestamp">
            <summary>
            When was the error thrown
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.Message">
            <summary>
            The message that was written in a userfriendly manner
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.Runspace">
            <summary>
            The runspace the error occured on.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.#ctor">
            <summary>
            Create an empty record
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.#ctor(System.Management.Automation.ErrorRecord,System.String,System.DateTime,System.String)">
            <summary>
            Create a filled out error record
            </summary>
            <param name="Record">The original error record</param>
            <param name="FunctionName">The function that wrote the error</param>
            <param name="Timestamp">When was the error generated</param>
            <param name="Message">What message was passed when writing the error</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbaErrorRecord.#ctor(System.Management.Automation.ErrorRecord,System.String,System.DateTime,System.String,System.Guid)">
            <summary>
            Create a filled out error record
            </summary>
            <param name="Record">The original error record</param>
            <param name="FunctionName">The function that wrote the error</param>
            <param name="Timestamp">When was the error generated</param>
            <param name="Message">What message was passed when writing the error</param>
            <param name="Runspace">The ID of the runspace writing the error. Used to separate output between different runspaces in the same process.</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException">
            <summary>
            Wrapper class that can emulate any exception for purpose of serialization without blowing up the storage space consumed
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.GetException">
            <summary>
            Returns the original exception object that we interpreted. This is on purpose not a property, as we want to avoid messing with serialization size.
            </summary>
            <returns>The original exception that got thrown</returns>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.Message">
            <summary>
            The actual Exception Message
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.Source">
            <summary>
            The original source of the Exception
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.StackTrace">
            <summary>
            Where on the callstack did the exception occur?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.TargetSite">
            <summary>
            What was the target site on the code that caused it. This property has been altered to avoid export issues, if a string representation is not sufficient, access the original exception using GetException()
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.HResult">
            <summary>
            The HResult of the exception. Useful in debugging native code errors.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.HelpLink">
            <summary>
            Link to a proper help article.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.Data">
            <summary>
            Additional data that has been appended
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.InnerException">
            <summary>
            The inner exception in a chain of exceptions.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.ExceptionTypeName">
            <summary>
            The full namespace name of the exception that has been wrapped.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.ExceptionData">
            <summary>
            Contains additional properties other exceptions might contain.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.CategoryInfo">
            <summary>
            The category of the error
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.ErrorDetails">
            <summary>
            The details on the error
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.FullyQualifiedErrorId">
            <summary>
            The specific error identity, used to identify the target
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.InvocationInfo">
            <summary>
            The details of how this was called.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.ScriptStackTrace">
            <summary>
            The script's stacktrace
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.TargetObject">
            <summary>
            The object being processed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.FunctionName">
            <summary>
            The name of the function throwing the error
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.Timestamp">
            <summary>
            When was the error thrown
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.Runspace">
            <summary>
            The runspace the error occured on.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.#ctor">
            <summary>
            Creates an empty exception object. Mostly for serialization support
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.#ctor(System.Exception)">
            <summary>
            Creates an exception based on an original exception object
            </summary>
            <param name="Except">The exception to wrap around</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.#ctor(System.Management.Automation.ErrorRecord)">
            <summary>
            Creates a rich information exception object based on a full error record as recorded by PowerShell
            </summary>
            <param name="Record">The error record to copy from</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.#ctor(System.Exception,System.String,System.DateTime,System.String,System.Guid)">
            <summary>
            Creates a new exception object with rich meta information from the Dbatools runtime.
            </summary>
            <param name="Except">The exception thrown</param>
            <param name="FunctionName">The name of the function in which the error occured</param>
            <param name="Timestamp">When did the error occur</param>
            <param name="Message">The message to add to the exception</param>
            <param name="Runspace">The ID of the runspace from which the exception was thrown. Useful in multi-runspace scenarios.</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.#ctor(System.Management.Automation.ErrorRecord,System.String,System.DateTime,System.String,System.Guid)">
            <summary>
            Creates a new exception object with rich meta information from the Dbatools runtime.
            </summary>
            <param name="Record">The error record written</param>
            <param name="FunctionName">The name of the function in which the error occured</param>
            <param name="Timestamp">When did the error occur</param>
            <param name="Message">The message to add to the exception</param>
            <param name="Runspace">The ID of the runspace from which the exception was thrown. Useful in multi-runspace scenarios.</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException.ToString">
            <summary>
            Returns a string representation of the exception.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord">
            <summary>
            Carrier class, designed to hold an arbitrary number of exceptions. Used for exporting to XML in nice per-incident packages.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.Runspace">
            <summary>
            Runspace where shit happened.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.Timestamp">
            <summary>
            When did things go bad?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.FunctionName">
            <summary>
            Name of the function, where fail happened.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.Message">
            <summary>
            The message the poor user was shown.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.ExceptionType">
            <summary>
            Displays the name of the exception, the make scanning exceptions easier.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.TargetObject">
            <summary>
            The target object of the first exception in the list, if any
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.Exceptions">
            <summary>
            List of Exceptions that are part of the incident (usually - but not always - only one).
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.#ctor">
            <summary>
            Creates an empty container. Ideal for the homeworker who loves doing it all himself.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.#ctor(Sqlcollaborative.Dbatools.dbaSystem.DbatoolsException)">
            <summary>
            Creates a container filled with the first exception.
            </summary>
            <param name="Exception"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DbatoolsExceptionRecord.#ctor(System.Guid,System.DateTime,System.String,System.String)">
            <summary>
            Creates a container filled with the meta information but untouched by exceptions
            </summary>
            <param name="Runspace">The runspace where it all happened</param>
            <param name="Timestamp">When did it happen?</param>
            <param name="FunctionName">Where did it happen?</param>
            <param name="Message">What did the witness have to say?</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.DebugHost">
            <summary>
            Hosts static debugging values and methods
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxErrorCount">
            <summary>
            The maximum numbers of error records maintained in-memory.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxMessageCount">
            <summary>
            The maximum number of messages that can be maintained in the in-memory message queue
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxMessagefileBytes">
            <summary>
            The maximum size of a given logfile. When reaching this limit, the file will be abandoned and a new log created. Set to 0 to not limit the size.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxMessagefileCount">
            <summary>
            The maximum number of logfiles maintained at a time. Exceeding this number will cause the oldest to be culled. Set to 0 to disable the limit.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxErrorFileBytes">
            <summary>
            The maximum size all error files combined may have. When this number is exceeded, the oldest entry is culled.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxTotalFolderSize">
            <summary>
            This is the upper limit of length all items in the log folder may have combined across all processes.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.LoggingPath">
            <summary>
            Path to where the logfiles live.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MaxLogFileAge">
            <summary>
            Any logfile older than this will automatically be cleansed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MessageLogFileEnabled">
            <summary>
            Governs, whether a log file for the system messages is written
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.MessageLogEnabled">
            <summary>
            Governs, whether a log of recent messages is kept in memory
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.ErrorLogFileEnabled">
            <summary>
            Governs, whether log files for errors are written
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.ErrorLogEnabled">
            <summary>
            Governs, whether a log of recent errors is kept in memory
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.DeveloperMode">
            <summary>
            Enables the developer mode. In this additional information and logs are written, in order to make it easier to troubleshoot issues.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.DevelopmentBranch">
            <summary>
            Returns whether the module is currently in a development branch. Some warnings will only be shown in development branch, but hidden in master / public releases
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.OutQueueError">
            <summary>
            The outbound queue for errors. These will be processed and written to xml
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.OutQueueLog">
            <summary>
            The outbound queue for logs. These will be processed and written to logfile
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.GetErrors">
            <summary>
            Retrieves a copy of the Error stack
            </summary>
            <returns>All errors thrown by dbatools functions</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.GetLog">
            <summary>
            Retrieves a copy of the message log
            </summary>
            <returns>All messages logged this session.</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.WriteErrorEntry(System.Management.Automation.ErrorRecord[],System.String,System.DateTime,System.String,System.Guid)">
            <summary>
            Write an error record to the log
            </summary>
            <param name="Record">The actual error record as powershell wrote it</param>
            <param name="FunctionName">The name of the function writing the error</param>
            <param name="Timestamp">When was the error written</param>
            <param name="Message">What message was passed to the user</param>
            <param name="Runspace">The runspace the message was written from</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.WriteLogEntry(System.String,Sqlcollaborative.Dbatools.dbaSystem.LogEntryType,System.DateTime,System.String,Sqlcollaborative.Dbatools.dbaSystem.MessageLevel,System.Guid,System.Object)">
            <summary>
            Write a new entry to the log
            </summary>
            <param name="Message">The message to log</param>
            <param name="Type">The type of the message logged</param>
            <param name="Timestamp">When was the message generated</param>
            <param name="FunctionName">What function wrote the message</param>
            <param name="Level">At what level was the function written</param>
            <param name="Runspace">The runspace the message is coming from</param>
            <param name="TargetObject">The object associated with a given message.</param>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.ImportTimeEntries">
            <summary>
            Lists the duration for the last import of dbatools.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.dbaSystem.DebugHost.ImportTime">
            <summary>
            Returns the calculated time each phase took during the last import of dbatool.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.LogEntry">
            <summary>
            An individual entry for the message log
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.Message">
            <summary>
            The message logged
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.Type">
            <summary>
            What kind of entry was this?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.Timestamp">
            <summary>
            When was the message logged?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.FunctionName">
            <summary>
            What function wrote the message
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.Level">
            <summary>
            What level was the message?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.Runspace">
            <summary>
            What runspace was the message written from?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.TargetObject">
            <summary>
            The object that was the focus of this message.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.#ctor">
            <summary>
            Creates an empty log entry
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.#ctor(System.String,Sqlcollaborative.Dbatools.dbaSystem.LogEntryType,System.DateTime,System.String,Sqlcollaborative.Dbatools.dbaSystem.MessageLevel)">
            <summary>
            Creates a filled out log entry
            </summary>
            <param name="Message">The message that was logged</param>
            <param name="Type">The type(s) of message written</param>
            <param name="Timestamp">When was the message logged</param>
            <param name="FunctionName">What function wrote the message</param>
            <param name="Level">What level was the message written at.</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.dbaSystem.LogEntry.#ctor(System.String,Sqlcollaborative.Dbatools.dbaSystem.LogEntryType,System.DateTime,System.String,Sqlcollaborative.Dbatools.dbaSystem.MessageLevel,System.Guid,System.Object)">
            <summary>
            Creates a filled out log entry
            </summary>
            <param name="Message">The message that was logged</param>
            <param name="Type">The type(s) of message written</param>
            <param name="Timestamp">When was the message logged</param>
            <param name="FunctionName">What function wrote the message</param>
            <param name="Level">What level was the message written at.</param>
            <param name="Runspace">The ID of the runspace that wrote the message.</param>
            <param name="TargetObject">The object this message was all about.</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.LogEntryType">
            <summary>
            The kind of information the logged entry was.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntryType.None">
            <summary>
            This entry wasn't written to any stream
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntryType.Information">
            <summary>
            A message that was written to the current host equivalent, if available also to the information stream
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntryType.Verbose">
            <summary>
            A message that was written to the verbose stream
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntryType.Debug">
            <summary>
            A message that was written to the Debug stream
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.LogEntryType.Warning">
            <summary>
            A message written to the warning stream
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.MessageHost">
            <summary>
            Provides static resources to the messaging subsystem
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.MaximumInformation">
            <summary>
            The maximum message level to still display to the user directly.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.MaximumVerbose">
            <summary>
            The maxium message level where verbose information is still written.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.MaximumDebug">
            <summary>
            The maximum message level where debug information is still written.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.MinimumInformation">
            <summary>
            The minimum required message level for messages that will be shown to the user.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.MinimumVerbose">
            <summary>
            The minimum required message level where verbose information is written.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.MinimumDebug">
            <summary>
            The minimum required message level where debug information is written.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.InfoColor">
            <summary>
            The color stuff gets written to the console in
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageHost.DeveloperColor">
            <summary>
            The color stuff gets written to the console in, when developer mode is enabled and the message would not have been written after all
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel">
            <summary>
            The various levels of verbosity available.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Critical">
            <summary>
            Very important message, should be shown to the user as a high priority
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Important">
            <summary>
            Important message, the user should read this
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Output">
            <summary>
            Important message, the user should read this
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Significant">
            <summary>
            Message relevant to the user.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.VeryVerbose">
            <summary>
            Not important to the regular user, still of some interest to the curious
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Verbose">
            <summary>
            Background process information, in case the user wants some detailed information on what is currently happening.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.SomewhatVerbose">
            <summary>
            A footnote in current processing, rarely of interest to the user
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.System">
            <summary>
            A message of some interest from an internal system persepctive, but largely irrelevant to the user.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Debug">
            <summary>
            Something only of interest to a debugger
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.InternalComment">
            <summary>
            This message barely made the cut from being culled. Of purely development internal interest, and even there is 'interest' a strong word for it.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.dbaSystem.MessageLevel.Warning">
            <summary>
            This message is a warning, sure sign something went badly wrong
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException">
            <summary>
            An exception that is thrown by parameter classes when given empty input
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException.ParameterClass">
            <summary>
            The parameter class that did the throwing
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException.#ctor">
            <summary>
            Creates an empty exception
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException.#ctor(System.String)">
            <summary>
            Creates an exception with a simple message
            </summary>
            <param name="Message">The message to tell</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException.#ctor(System.String,System.Exception)">
            <summary>
            Creates an exception with a message and a nested exception
            </summary>
            <param name="Message">The message to tell</param>
            <param name="Inner">The inner exception to nest</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException.#ctor(System.String,System.String)">
            <summary>
            Creates an exception with a message and a ParameterClass
            </summary>
            <param name="Message">The message to tell</param>
            <param name="ParameterClass">The Parameter Class that threw the exception</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Exceptions.BloodyHellGiveMeSomethingToWorkWithException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Creates an exception with a message, a nested exception and a ParameterClass
            </summary>
            <param name="Message">The message to tell</param>
            <param name="Inner">The inner exception to nest</param>
            <param name="ParameterClass">The Parameter Class that threw the exception</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Maintenance.MaintenanceHost">
            <summary>
            Host class providing access to resources need to perform dbatools maintenance
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceHost.Tasks">
            <summary>
            The register of available tasks.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Maintenance.MaintenanceHost.HasDueTasks">
            <summary>
            Whether there are any due tasks
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Maintenance.MaintenanceHost.GetNextTask(System.String[])">
            <summary>
            Returns the next task to perform. Returns null when there are no more tasks to perform
            </summary>
            <param name="Exclusions">List of tasks not to return, even if they are ready to execute again. This avoids one misconfigured task starving all lower priority tasks</param>
            <returns>The next task to perform.</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Maintenance.MaintenancePriority">
            <summary>
            How high the priority of the task. Higher priority tasks take precedence over low priority tasks.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenancePriority.Trivial">
            <summary>
            This task is completely trivial and can be done whenever there is some spare time for it
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenancePriority.Low">
            <summary>
            The task is not very significant, but should be dealt with at some point
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenancePriority.Medium">
            <summary>
            Average priority task
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenancePriority.High">
            <summary>
            An important task that will take precedence over most other tasks
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenancePriority.Critical">
            <summary>
            A task so critical, that it should be considered to move it to synchronous execution instead.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask">
            <summary>
            An individual task assigned to the maintenance engine
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.Name">
            <summary>
            The name of the task to execute. No duplciates are possible.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.Once">
            <summary>
            Whether the task should be done once only
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.Interval">
            <summary>
            The interval at which the task should be performed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.Delay">
            <summary>
            If the task need not be performed right away, it can be delayed, in order to prioritize more important initialization tasks
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.Registered">
            <summary>
            When was the task first registered. Duplicate registration calls will not increment this value.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.LastExecution">
            <summary>
            When was the task last executed.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.Priority">
            <summary>
            How important is this task?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.ScriptBlock">
            <summary>
            The task code to execute
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Maintenance.MaintenanceTask.IsDue">
            <summary>
            Whether the task is due and should be executed
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter">
            <summary>
            Parameter class that handles the various kinds of credential input
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.Credential">
            <summary>
            The credential object received
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.UserName">
            <summary>
            The name of the credential object
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.Password">
            <summary>
            The password of the credential object
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.#ctor(System.Management.Automation.PSCredential)">
            <summary>
            Creates a credential parameter from a PSCredential object
            </summary>
            <param name="Credential">A PSCredential object</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.#ctor(System.Net.NetworkCredential)">
            <summary>
            Creates a credential parameter from a NetworkCredential object
            </summary>
            <param name="Credential">The credentials to use</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.#ctor(System.String)">
            <summary>
            Creates a credential parameter from a string only. Will prompt the user for the rest of the input. Will provide an option to remember the credential under the name provided
            </summary>
            <param name="UserName">The username (and domain name as may be the case) to put a credential around</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.#ctor(System.Object)">
            <summary>
            Creates a credential parameter from anything it nows how to handle
            </summary>
            <param name="Credential">The object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.op_Implicit(Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter)~System.Management.Automation.PSCredential">
            <summary>
            Implicitly converts from DbaCredentialParameter to PSCredential
            </summary>
            <param name="Input">The DbaCredentialParameter to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.op_Implicit(System.Management.Automation.PSCredential)~Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter">
            <summary>
            Implicitly converts a PSCredential object to DbaCredenitalParameter
            </summary>
            <param name="Input">The PSCredential to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.op_Implicit(Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter)~System.Net.NetworkCredential">
            <summary>
            Implicitly converts from DbaCredentialParameter to NetworkCredential
            </summary>
            <param name="Input">The DbaCredentialParameter to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.op_Implicit(System.Net.NetworkCredential)~Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter">
            <summary>
            Implicitly converts a NetworkCredential object to DbaCredenitalParameter
            </summary>
            <param name="Input">The NetworkCredential to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.GetNetworkCredential">
            <summary>
            Legacy wrapper. While there exists implicit conversion, this allows using the object as before, avoiding errors for unknown method.
            </summary>
            <returns>A network credential object with the same credentials as the original object</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.PromptForCredential(System.String)">
            <summary>
            Prompts the user for a password to complete a credentials object
            </summary>
            <param name="Name">The name of the user. If specified, this will be added to the prompt.</param>
            <returns>The finished PSCredential object</returns>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.CredentialStore">
            <summary>
            Cached credentials, if the user stors them under a name.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.GetTypeCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToBoolean(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToChar(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToSByte(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToByte(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToInt16(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToUInt16(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToInt32(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToUInt32(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToInt64(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToUInt64(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToSingle(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToDouble(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToDecimal(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToDateTime(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToString(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="Format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCredentialParameter.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Tries to convert the credential parameter to one of its supported types
            </summary>
            <param name="TargetType">The type to convert to</param>
            <param name="Format">Irrelevant</param>
            <returns></returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter">
            <summary>
            Input converter for Computer Management Information
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.Connection">
            <summary>
            The resolved connection object
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.Success">
            <summary>
            Whether input processing was successful
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.InputObject">
            <summary>
            The object actually passed to the class
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.op_Implicit(Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter)~Sqlcollaborative.Dbatools.Connection.ManagementConnection">
            <summary>
            Implicitly convert all connection parameter objects to the connection-type
            </summary>
            <param name="Input">The parameter object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.#ctor(System.String)">
            <summary>
            Creates a new DbaWmConnectionParameter based on an input-name
            </summary>
            <param name="ComputerName">The name of the computer the connection is stored for.</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.#ctor(Sqlcollaborative.Dbatools.Connection.ManagementConnection)">
            <summary>
            Creates a new DbaWmConnectionParameter based on an already existing connection object.
            </summary>
            <param name="Connection">The connection to accept</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.#ctor(System.Object)">
            <summary>
            Tries to convert a generic input object into a true input.
            </summary>
            <param name="Input">Any damn object in the world</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaCmConnectionParameter.#ctor(Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter)">
            <summary>
            Creates a new DbaCmConnectionParameter based on an instance parameter
            </summary>
            <param name="Instance">The instance to interpret</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.DbaInstanceInputType">
            <summary>
            What kind of object was bound to the parameter class?
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaInstanceInputType.Default">
            <summary>
            Anything, really. An unspecific not reusable type was bound
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaInstanceInputType.Linked">
            <summary>
            A live smo linked server object was bound
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaInstanceInputType.Server">
            <summary>
            A live smo server object was bound
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaInstanceInputType.RegisteredServer">
            <summary>
            A Central Management Server RegisteredServer SMO object was bound
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter">
            <summary>
            Input converter for instance information
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.ComputerName">
            <summary>
            Name of the computer as resolvable by DNS
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.InstanceName">
            <summary>
            Name of the instance on the target server
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.Port">
            <summary>
            The port over which to connect to the server. Only present if non-default
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.NetworkProtocol">
            <summary>
            The network protocol to connect over
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.IsLocalHost">
            <summary>
            Verifies, whether the specified computer is localhost or not.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.FullName">
            <summary>
            Full name of the instance, including the server-name
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.FullSmoName">
            <summary>
            Full name of the instance, including the server-name, used when connecting via SMO
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.SqlComputerName">
            <summary>
            Name of the computer as used in an SQL Statement
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.SqlInstanceName">
            <summary>
            Name of the instance as used in an SQL Statement
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.SqlFullName">
            <summary>
            Full name of the instance, including the server-name as used in an SQL statement
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.IsConnectionString">
            <summary>
            Whether the input is a connection string
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.InputObject">
            <summary>
            The original object passed to the parameter class.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.Type">
            <summary>
            What kind of object was bound to the parameter class? For efficiency's purposes.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.LinkedLive">
            <summary>
            Returns, whether a live SMO object was bound for the purpose of accessing LinkedServer functionality
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.LinkedServer">
            <summary>
            Returns the available Linked Server objects from live objects only
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.op_Implicit(Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter)~System.String">
            <summary>
            Converts the parameter class to its full name
            </summary>
            <param name="Input">The parameter class object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.#ctor(System.String)">
            <summary>
            Creates a DBA Instance Parameter from string
            </summary>
            <param name="Name">The name of the instance</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.#ctor(System.Net.IPAddress)">
            <summary>
            Creates a DBA Instance Parameter from an IPAddress
            </summary>
            <param name="Address"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.#ctor(System.Net.NetworkInformation.PingReply)">
            <summary>
            Creates a DBA Instance Parameter from the reply to a ping
            </summary>
            <param name="Ping">The result of a ping</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.#ctor(System.Net.IPHostEntry)">
            <summary>
            Creates a DBA Instance Parameter from the result of a dns resolution
            </summary>
            <param name="Entry">The result of a dns resolution, to be used for targetting the default instance</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.#ctor(System.Object)">
            <summary>
            Creates a DBA Instance parameter from any object
            </summary>
            <param name="Input">Object to parse</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.DbaInstanceParameter.ToString">
            <summary>
            Overrides the regular tostring to show something pleasant and useful
            </summary>
            <returns>The full SMO name</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.ParameterContractAttribute">
            <summary>
            The attribute used to define the elements of a ParameterClass contract
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.ParameterContractAttribute.Type">
            <summary>
            Returns the type of the element this attribute is supposed to be attached to.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Parameter.ParameterContractAttribute.Behavior">
            <summary>
            Returns the behavior to expect from the contracted element. This sets the expectations on how this element is likely to act.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Parameter.ParameterContractAttribute.#ctor(Sqlcollaborative.Dbatools.Parameter.ParameterContractType,Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior)">
            <summary>
            Ceates a perfectly common parameter contract attribute. For use with all parameter classes' public elements.
            </summary>
            <param name="Type"></param>
            <param name="Behavior"></param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior">
            <summary>
            Defines how this element will behave
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.NotContracted">
            <summary>
            This elements is not actually part of the contract. Generally you wouldn't want to add the attribute at all in that case. However, in some places it helps avoiding confusion.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.Mandatory">
            <summary>
            This element may never be null and must be considered in all assignments. Even if the element is de facto not nullable, all constructors must assign it.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.Optional">
            <summary>
            This element may contain data, but is not required to. In case of a method, it may simply do nothing
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.Failable">
            <summary>
            This method may throw an error when executing and should always be handled with try/catch. Use this on methods that use external calls.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.Arbiter">
            <summary>
            The content of the thus marked field determines the dependent's state. Generally, only if the arbiter is true, will the dependent elements be mandatory. This behavior may only be assigned to boolean fields.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.Conditional">
            <summary>
            This behavior can be assigned together with the 'Mandatory' behavior. It means the field is only mandatory if an arbiter field is present and set to true.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractBehavior.Conversion">
            <summary>
            Converts content. Generally applied only to operators, but some methods may also convert information.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Parameter.ParameterContractType">
            <summary>
            Defines what kind of element is granted the contract
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractType.Field">
            <summary>
            The contracted element is a field containing a value
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractType.Method">
            <summary>
            The contracted element is a method, performing an action
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Parameter.ParameterContractType.Operator">
            <summary>
            The contracted element is an operator, facilitating type conversion. Generally into a dedicated object type this parameterclass abstracts.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Runspace.DbaRunspaceState">
            <summary>
            Contains the state a managed, unique runspace can be in.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Runspace.DbaRunspaceState.Running">
            <summary>
            The runspace is up and running
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Runspace.DbaRunspaceState.Stopping">
            <summary>
            The runspace has received the stop order, but has not yet obeyed it
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Runspace.DbaRunspaceState.Stopped">
            <summary>
            The runspace has followed its order to stop and is currently disabled
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer">
            <summary>
            Class that contains the logic necessary to manage a unique runspace
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.Name">
            <summary>
            The name of the runspace.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.RunspaceGuid">
            <summary>
            The Guid of the running Runspace
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.SetScript(System.Management.Automation.ScriptBlock)">
            <summary>
            Sets the script to execute in the runspace. Will NOT take immediate effect. Only after restarting the runspace will it be used.
            </summary>
            <param name="Script">The scriptblock to execute</param>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.State">
            <summary>
            The state the runspace currently is in.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.Start">
            <summary>
            Starts the Runspace.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.SetName(System.Management.Automation.Runspaces.Runspace)">
            <summary>
            Sets the name on a runspace. This WILL FAIL for PowerShell v3!
            </summary>
            <param name="Runspace">The runspace to be named</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.Stop">
            <summary>
            Gracefully stops the Runspace
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.Kill">
            <summary>
            Very ungracefully kills the runspace. Use only in the most dire emergency.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.SignalStopped">
            <summary>
            Signals the registered runspace has stopped execution
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Runspace.RunspaceContainer.#ctor(System.String,System.Management.Automation.ScriptBlock)">
            <summary>
            Creates a new runspace container with the basic information needed
            </summary>
            <param name="Name">The name of the Runspace</param>
            <param name="Script">The code using the runspace logic</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Runspace.RunspaceHost">
            <summary>
            Provides hosting for all registered runspaces
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Runspace.RunspaceHost.StopTimeoutSeconds">
            <summary>
            The number of seconds before a Stop command is interrupted and instead the runspace is gracelessly shut down.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Runspace.RunspaceHost.Runspaces">
            <summary>
            The dictionary containing the definitive list of unique Runspace
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.TabExpansion.TabCompletionSet">
            <summary>
            Contains information used to transmit Tepp Assignment
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabCompletionSet.Command">
            <summary>
            The name of the command to complete. "*" if all commands that have the parameter should be selected instead
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabCompletionSet.Parameter">
            <summary>
            The parameter to complete
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabCompletionSet.Script">
            <summary>
            The name of the script to complete with
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabCompletionSet.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new tab completion set object with all information prefilled
            </summary>
            <param name="Command">The name of the command to complete. "*" if all commands that have the parameter should be selected instead</param>
            <param name="Parameter">The parameter to complete</param>
            <param name="Script">The name of the script to complete with</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabCompletionSet.Applies(System.String,System.String)">
            <summary>
            Tests, whether the completion set applies to the specified parameter / command combination
            </summary>
            <param name="Command">The command to test</param>
            <param name="Parameter">The parameter of the command to test</param>
            <returns>Whether this completion set applies to the specified combination of parameter / command</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.TabExpansion.InstanceAccess">
            <summary>
            Contains information on access to an instance
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.InstanceAccess.InstanceName">
            <summary>
            The name of the instance to access
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.InstanceAccess.IsSysAdmin">
            <summary>
            Whether the account had sysadmin privileges. On multiple user usage, the cache will prefer sysadmin accounts.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.InstanceAccess.ConnectionObject">
            <summary>
            The actual connection object to connect with to the server
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.InstanceAccess.LastAccess">
            <summary>
            When was the instance last accessed using dbatools
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.InstanceAccess.LastUpdate">
            <summary>
            When was the instance's TEPP cache last updated
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.TabExpansion.ScriptContainer">
            <summary>
            Regular container to store scripts in, that are used in TEPP
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.ScriptContainer.Name">
            <summary>
            The name of the scriptblock
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.ScriptContainer.ScriptBlock">
            <summary>
            The scriptblock doing the logic
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.ScriptContainer.LastExecution">
            <summary>
            The last time the scriptblock was called. Must be updated by the scriptblock itself
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.ScriptContainer.LastDuration">
            <summary>
            The time it took to run the last time
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost">
            <summary>
            Class that handles the static fields supporting the dbatools TabExpansion implementation
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.Scripts">
            <summary>
            Field containing the scripts that were registered.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.Cache">
            <summary>
            The cache used by scripts utilizing TabExpansionPlusPlus in dbatools
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.InstanceAccess">
            <summary>
            List of instances and when they were last accessed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppGatherScriptsFast">
            <summary>
            Scripts that build the cache and are suitable for synchronous execution
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppGatherScriptsSlow">
            <summary>
            Scripts that build the cache and are not suitable for synchronous execution
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.DbatoolsCommands">
            <summary>
            A list of all commands imported into dbatools
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TabCompletionSets">
            <summary>
            List of completion sets that should be processed into Tepp Assignments. Only populate this list on first import.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppAssignment">
            <summary>
            Maps a TEPP scriptblock to a command and parameter
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.SetInstance(System.String,System.Object,System.Boolean)">
            <summary>
            Registers a new instance or updates an already existing one. Should only be called from Connect-SqlInstance and Connect-DbaSqlServer
            </summary>
            <param name="InstanceName">Name of the instance connected to</param>
            <param name="Connection">To connection object containing the relevant information for accessing the instance</param>
            <param name="IsSysAdmin">Whether the account connecting to the instnace has SA privileges</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.GetTeppScript(System.String,System.String)">
            <summary>
            Returns the assigned scriptblock for a given parameter
            </summary>
            <param name="Command">The command that should be completed</param>
            <param name="Parameter">The parameter completion is provided for</param>
            <returns>Either the relevant script container or null</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.SetTeppScript(System.String,System.String,System.String)">
            <summary>
            Assigns a registered script to the parameter of a command
            </summary>
            <param name="Command">The command for which to complete</param>
            <param name="Parameter">The parameter for which to complete</param>
            <param name="Script">To name of the script with which to complete</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.AddTabCompletionSet(System.String,System.String,System.String)">
            <summary>
            Adds a completion set to the list of items to process
            </summary>
            <param name="Command">The command to complete for (accepts wildcard matching)</param>
            <param name="Parameter">The parameter to complete for (accepts wildcard matching)</param>
            <param name="Script">The script to register</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.CalculateTabExpansion">
            <summary>
            Processes the content of TabCompletionSets and Scripts into TappAssignments based on the DbatoolsCommands list.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppDisabled">
            <summary>
            Whether TEPP in its entirety is disabled
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppAsyncDisabled">
            <summary>
            Whether asynchronous TEPP updating should be disabled
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppSyncDisabled">
            <summary>
            Whether synchronous TEPP updating should be disabled
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppUpdateInterval">
            <summary>
            The interval in which asynchronous TEPP cache updates are performed
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.TabExpansion.TabExpansionHost.TeppUpdateTimeout">
            <summary>
            After this timespan of no requests to a server, the updates to its cache are disabled.
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.TypeConversion.DbaCredentialParameterConverter">
            <summary>
            Converts to and from DbaCredentialparameter
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TypeConversion.DbaCredentialParameterConverter.CanConvertTo(System.Object,System.Type)">
            <summary>
            Verifies, whether a conversion for the object to the target type is possible
            </summary>
            <param name="SourceValue">The object to convert</param>
            <param name="DestinationType">The type to convert to</param>
            <returns>Whether it's possible, duh!</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TypeConversion.DbaCredentialParameterConverter.ConvertTo(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts from DbaCredentialparameter to whatever destination type is attempted
            </summary>
            <param name="sourceValue">The source object. Better be a DbaCredentialparameter!</param>
            <param name="destinationType">Should be a supported destination type</param>
            <param name="formatProvider">Irrelevant</param>
            <param name="ignoreCase">Irrelevant</param>
            <returns>The target content type</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TypeConversion.DbaCredentialParameterConverter.CanConvertFrom(System.Object,System.Type)">
            <summary>
            Verifies, whether a conversion for the object from the source type to DbaCredentialParameter is possible
            </summary>
            <param name="SourceValue">The object to convert</param>
            <param name="DestinationType">The source type to convert to</param>
            <returns>Whether it's possible, duh!</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TypeConversion.DbaCredentialParameterConverter.ConvertFrom(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts a source object to DbaCredentialparameter
            </summary>
            <param name="sourceValue">The source object</param>
            <param name="destinationType">The destination type. Must be DbaCredentialParameter, or red stuff happens</param>
            <param name="formatProvider">Irrelevant</param>
            <param name="ignoreCase">Irrelevant</param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.TypeConversion.DbaCredentialParameterConverter.IsSupportedType(System.Type)">
            <summary>
            Returns, whether a given type is supported for conversion
            </summary>
            <param name="type">The type to validate</param>
            <returns>Whether it's a supported conversion</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.CredentialPrompt">
            <summary>
            Dedicated class to prompt for credentials
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Name">
            <summary>
            The name of the user to pre-fill the username field
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Window">
            <summary>
            The window of the prompt that was shown
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Username">
            <summary>
            The final, resulting username
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Password">
            <summary>
            The final, result password
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Remember">
            <summary>
            Whether the password should be remembered
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Finished">
            <summary>
            Marker indicating that execution has finished
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.Cancelled">
            <summary>
            Whether the windoww was cancelled
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.PromptForCredential">
            <summary>
            Start asking away
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.CredentialPrompt.GetCredential(System.String)">
            <summary>
            Executes a request for credentials on a dedicated STA thread
            </summary>
            <param name="Name">THe name of the user to put in the prompt</param>
            <returns>The result object</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DateTimeExtension">
            <summary>
            Extends DateTime
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DateTimeExtension.CompareTo(System.DateTime,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            Adds a compareTo method to DateTime to compare with DbaDateTimeBase
            </summary>
            <param name="Base">The extended DateTime object</param>
            <param name="comparedTo">The DbaDateTimeBase to compare with</param>
            <returns></returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DbaDate">
            <summary>
            A dbatools-internal datetime wrapper for neater display
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.DateTime)">
            <summary>
            Constructs a generic timestamp object wrapper from an input timestamp object.
            </summary>
            <param name="Timestamp">The timestamp to wrap</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int64,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.ToString">
            <summary>
            Provids the default-formated string, using the defined default formatting.
            </summary>
            <returns>Formatted datetime-string</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDate)~System.DateTime">
            <summary>
            Implicitly convert to DateTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.op_Implicit(System.DateTime)~Sqlcollaborative.Dbatools.Utility.DbaDate">
            <summary>
            Implicitly convert from DateTime
            </summary>
            <param name="Base">The object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDate)~Sqlcollaborative.Dbatools.Utility.DbaDateTime">
            <summary>
            Implicitly convert to DbaDate
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDate)~Sqlcollaborative.Dbatools.Utility.DbaTime">
            <summary>
            Implicitly convert to DbaTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDate.Generate(System.DateTime)">
            <summary>
            Generates a DbaDate object based off DateTime object. Will be null if Base is the start value (Tickes == 0).
            </summary>
            <param name="Base">The Datetime to base it off</param>
            <returns>The object to generate (or null)</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DbaDateTime">
            <summary>
            A dbatools-internal datetime wrapper for neater display
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.DateTime)">
            <summary>
            Constructs a generic timestamp object wrapper from an input timestamp object.
            </summary>
            <param name="Timestamp">The timestamp to wrap</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int64,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.ToString">
            <summary>
            Provids the default-formated string, using the defined default formatting.
            </summary>
            <returns>Formatted datetime-string</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDateTime)~System.DateTime">
            <summary>
            Implicitly convert to DateTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.op_Implicit(System.DateTime)~Sqlcollaborative.Dbatools.Utility.DbaDateTime">
            <summary>
            Implicitly convert from DateTime
            </summary>
            <param name="Base">The object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDateTime)~Sqlcollaborative.Dbatools.Utility.DbaDate">
            <summary>
            Implicitly convert to DbaDate
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDateTime)~Sqlcollaborative.Dbatools.Utility.DbaTime">
            <summary>
            Implicitly convert to DbaTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTime.Generate(System.DateTime)">
            <summary>
            Generates a DbaDateTime object based off DateTime object. Will be null if Base is the start value (Tickes == 0).
            </summary>
            <param name="Base">The Datetime to base it off</param>
            <returns>The object to generate (or null)</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase">
            <summary>
            Base class for wrapping around a DateTime object
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase._timestamp">
            <summary>
            The core resource, containing the actual timestamp
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Date">
            <summary>
            Gets the date component of this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Day">
            <summary>
            Gets the day of the month represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.DayOfWeek">
            <summary>
            Gets the day of the week represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.DayOfYear">
            <summary>
            Gets the day of the year represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Hour">
            <summary>
            Gets the hour component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Kind">
            <summary>
            Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Millisecond">
            <summary>
            Gets the milliseconds component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Minute">
            <summary>
            Gets the minute component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Month">
            <summary>
            Gets the month component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Second">
            <summary>
            Gets the seconds component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Ticks">
            <summary>
            Gets the number of ticks that represent the date and time of this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.TimeOfDay">
            <summary>
            Gets the time of day for this instance.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Year">
            <summary>
            Gets the year component of the date represented by this instance.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor">
            <summary>
            Constructor that should never be called, since this class should never be instantiated. It's there for implicit calls on child classes.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.DateTime)">
            <summary>
            Constructs a generic timestamp object wrapper from an input timestamp object.
            </summary>
            <param name="Timestamp">The timestamp to wrap</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int64,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Add(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddDays(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddHours(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddMilliseconds(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddMinutes(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddMonths(System.Int32)">
            <summary>
            
            </summary>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddSeconds(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddTicks(System.Int64)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.AddYears(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.CompareTo(System.DateTime)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Equals(System.DateTime)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetDateTimeFormats">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetDateTimeFormats(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetDateTimeFormats(System.Char)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetDateTimeFormats(System.Char,System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetBaseObject">
            <summary>
            Retrieve base DateTime object, this is a wrapper for
            </summary>
            <returns>Base DateTime object</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.GetTypeCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.IsDaylightSavingTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Subtract(System.DateTime)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.Subtract(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToBinary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToFileTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToFileTimeUtc">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToLocalTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToLongDateString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToLongTimeString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToOADate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToShortDateString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToShortTimeString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToString(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToString(System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToString(System.String,System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.ToUniversalTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_Addition(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="Timestamp"></param>
            <param name="Duration"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_Subtraction(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="Timestamp"></param>
            <param name="Duration"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_Equality(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            
            </summary>
            <param name="Timestamp1"></param>
            <param name="Timestamp2"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_Inequality(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            
            </summary>
            <param name="Timestamp1"></param>
            <param name="Timestamp2"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_GreaterThan(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            
            </summary>
            <param name="Timestamp1"></param>
            <param name="Timestamp2"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_LessThan(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            
            </summary>
            <param name="Timestamp1"></param>
            <param name="Timestamp2"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_GreaterThanOrEqual(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            
            </summary>
            <param name="Timestamp1"></param>
            <param name="Timestamp2"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_LessThanOrEqual(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase,Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)">
            <summary>
            
            </summary>
            <param name="Timestamp1"></param>
            <param name="Timestamp2"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase)~System.DateTime">
            <summary>
            Implicitly convert DbaDateTimeBase to DateTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase.op_Implicit(System.DateTime)~Sqlcollaborative.Dbatools.Utility.DbaDateTimeBase">
            <summary>
            Implicitly convert DateTime to DbaDateTimeBase
            </summary>
            <param name="Base">The object to convert</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DbaTime">
            <summary>
            A dbatools-internal datetime wrapper for neater display
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.DateTime)">
            <summary>
            Constructs a generic timestamp object wrapper from an input timestamp object.
            </summary>
            <param name="Timestamp">The timestamp to wrap</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int64,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="millisecond"></param>
            <param name="calendar"></param>
            <param name="kind"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.ToString">
            <summary>
            Provids the default-formated string, using the defined default formatting.
            </summary>
            <returns>Formatted datetime-string</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaTime)~System.DateTime">
            <summary>
            Implicitly convert to DateTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.op_Implicit(System.DateTime)~Sqlcollaborative.Dbatools.Utility.DbaTime">
            <summary>
            Implicitly convert from DateTime
            </summary>
            <param name="Base">The object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaTime)~Sqlcollaborative.Dbatools.Utility.DbaDate">
            <summary>
            Implicitly convert to DbaDate
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaTime)~Sqlcollaborative.Dbatools.Utility.DbaDateTime">
            <summary>
            Implicitly convert to DbaTime
            </summary>
            <param name="Base">The source object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaTime)~System.String">
            <summary>
            Implicitly convert to string
            </summary>
            <param name="Base">Object to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTime.Generate(System.DateTime)">
            <summary>
            Generates a DbaDateTime object based off DateTime object. Will be null if Base is the start value (Tickes == 0).
            </summary>
            <param name="Base">The Datetime to base it off</param>
            <returns>The object to generate (or null)</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan">
            <summary>
            A wrapper class, encapsuling a regular TimeSpan object. Used to provide custom timespan display.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Days">
            <summary>
            Gets the days component of the time interval represented by the current TimeSpan structure.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Hours">
            <summary>
            Gets the hours component of the time interval represented by the current TimeSpan structure.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Milliseconds">
            <summary>
            Gets the milliseconds component of the time interval represented by the current TimeSpan structure.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Minutes">
            <summary>
            Gets the minutes component of the time interval represented by the current TimeSpan structure.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Seconds">
            <summary>
            Gets the seconds component of the time interval represented by the current TimeSpan structure.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Ticks">
            <summary>
            Gets the number of ticks that represent the value of the current TimeSpan structure.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.TotalDays">
            <summary>
            Gets the value of the current TimeSpan structure expressed in whole and fractional days.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.TotalHours">
            <summary>
            Gets the value of the current TimeSpan structure expressed in whole and fractional hours.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.TotalMilliseconds">
            <summary>
            Gets the value of the current TimeSpan structure expressed in whole and fractional milliseconds.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.TotalMinutes">
            <summary>
            Gets the value of the current TimeSpan structure expressed in whole and fractional minutes.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.TotalSeconds">
            <summary>
            Gets the value of the current TimeSpan structure expressed in whole and fractional seconds.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.#ctor(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="Timespan"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="days"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="days"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <param name="milliseconds"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Add(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.CompareTo(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.CompareTo(Sqlcollaborative.Dbatools.Utility.DbaTimeSpan)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Duration">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Equals(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.GetBaseObject">
            <summary>
            Returns the wrapped base object
            </summary>
            <returns>The base object</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Negate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.Subtract(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.ToString">
            <summary>
            Returns the default string representation of the TimeSpan object
            </summary>
            <returns>The string representation of the DbaTimeSpan object</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.ToString(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.ToString(System.String,System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.op_Implicit(Sqlcollaborative.Dbatools.Utility.DbaTimeSpan)~System.TimeSpan">
            <summary>
            Implicitly converts a DbaTimeSpan object into a TimeSpan object
            </summary>
            <param name="Base">The original object to revert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpan.op_Implicit(System.TimeSpan)~Sqlcollaborative.Dbatools.Utility.DbaTimeSpan">
            <summary>
            Implicitly converts a TimeSpan object into a DbaTimeSpan object
            </summary>
            <param name="Base">The original object to wrap</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty">
            <summary>
            Makes timespan great again
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.FromMilliseconds(System.Double)">
            <summary>
            Creates a new, pretty timespan object from milliseconds
            </summary>
            <param name="Milliseconds">The milliseconds to convert from.</param>
            <returns>A pretty timespan object</returns>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.Digits">
            <summary>
            The number of digits a pretty timespan should round to.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.#ctor(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="Timespan"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.#ctor(System.Int64)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="days"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="days"></param>
            <param name="hours"></param>
            <param name="minutes"></param>
            <param name="seconds"></param>
            <param name="milliseconds"></param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.DbaTimeSpanPretty.ToString">
            <summary>
            Creates extra-nice timespan formats
            </summary>
            <returns>Humanly readable timespans</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.RegexHelper">
            <summary>
            Static class that holds useful regex patterns, ready for use
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.HostName">
            <summary>
            Pattern that checks for a valid hostname
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.HostNameEx">
            <summary>
            Pattern that checks for valid hostnames within a larger text
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.IPv4">
            <summary>
            Pattern that checks for a valid IPv4 address
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.IPv4Ex">
            <summary>
            Pattern that checks for valid IPv4 addresses within a larger text
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.IPv6">
            <summary>
            Will match a valid IPv6 address
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.IPv6Ex">
            <summary>
            Will match any IPv6 address within a larger text
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.ComputerTarget">
            <summary>
            Will match any string that in its entirety represents a valid target for dns- or ip-based targeting. Combination of HostName, IPv4 and IPv6
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.Guid">
            <summary>
            Will match a valid Guid
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.GuidEx">
            <summary>
            Will match any number of valid Guids in a larger text
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.InstanceName">
            <summary>
            Will match a mostly valid instance name.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.InstanceNameEx">
            <summary>
            Will match any instance of a mostly valid instance name.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.SqlReservedKeyword">
            <summary>
            Matches a word against the list of officially reserved keywords
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.SqlReservedKeywordEx">
            <summary>
            Will match any reserved keyword in a larger text
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.SqlReservedKeywordOdbc">
            <summary>
            Matches a word against the list of officially reserved keywords for odbc
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.SqlReservedKeywordOdbcEx">
            <summary>
            Will match any reserved odbc-keyword in a larger text
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.SqlReservedKeywordFuture">
            <summary>
            Matches a word against the list of keywords that are likely to become reserved in the future
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.RegexHelper.SqlReservedKeywordFutureEx">
            <summary>
            Will match against the list of keywords that are likely to become reserved in the future and are used in a larger text
            </summary>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.Size">
            <summary>
            Class that reports File size.
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.Size.Byte">
            <summary>
            Number of bytes contained in whatever object uses this object as a property
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.Size.Kilobyte">
            <summary>
            Kilobyte representation of the bytes
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.Size.Megabyte">
            <summary>
            Megabyte representation of the bytes
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.Size.Gigabyte">
            <summary>
            Gigabyte representation of the bytes
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.Size.Terabyte">
            <summary>
            Terabyte representation of the bytes
            </summary>
        </member>
        <member name="P:Sqlcollaborative.Dbatools.Utility.Size.Digits">
            <summary>
            Number if digits behind the dot.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.ToString">
            <summary>
            Shows the default string representation of size
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.Equals(System.Object)">
            <summary>
            Simple equality test
            </summary>
            <param name="obj">The object to test it against</param>
            <returns>True if equal, false elsewise</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.GetHashCode">
            <summary>
            Meaningless, but required
            </summary>
            <returns>Some meaningless output</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.#ctor">
            <summary>
            Creates an empty size.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.#ctor(System.Int64)">
            <summary>
            Creates a size with some content
            </summary>
            <param name="Byte">The length in bytes to set the size to</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.CompareTo(Sqlcollaborative.Dbatools.Utility.Size)">
            <summary>
            Some more interface implementation. Used to sort the object
            </summary>
            <param name="obj">The object to compare to</param>
            <returns>Something</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.CompareTo(System.Object)">
            <summary>
            Some more interface implementation. Used to sort the object
            </summary>
            <param name="obj">The object to compare to</param>
            <returns>Something</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Addition(Sqlcollaborative.Dbatools.Utility.Size,Sqlcollaborative.Dbatools.Utility.Size)">
            <summary>
            Adds two sizes
            </summary>
            <param name="a">The first size to add</param>
            <param name="b">The second size to add</param>
            <returns>The sum of both sizes</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Subtraction(Sqlcollaborative.Dbatools.Utility.Size,Sqlcollaborative.Dbatools.Utility.Size)">
            <summary>
            Substracts two sizes
            </summary>
            <param name="a">The first size to substract</param>
            <param name="b">The second size to substract</param>
            <returns>The difference between both sizes</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(System.Int32)~Sqlcollaborative.Dbatools.Utility.Size">
            <summary>
            Implicitly converts int to size
            </summary>
            <param name="a">The number to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(Sqlcollaborative.Dbatools.Utility.Size)~System.Int32">
            <summary>
            Implicitly converts size to int
            </summary>
            <param name="a">The size to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(System.Int64)~Sqlcollaborative.Dbatools.Utility.Size">
            <summary>
            Implicitly converts long to size
            </summary>
            <param name="a">The number to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(Sqlcollaborative.Dbatools.Utility.Size)~System.Int64">
            <summary>
            Implicitly converts size to long
            </summary>
            <param name="a">The size to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(System.String)~Sqlcollaborative.Dbatools.Utility.Size">
            <summary>
            Implicitly converts string to size
            </summary>
            <param name="a">The string to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(System.Double)~Sqlcollaborative.Dbatools.Utility.Size">
            <summary>
            Implicitly converts double to size
            </summary>
            <param name="a">The number to convert</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Size.op_Implicit(Sqlcollaborative.Dbatools.Utility.Size)~System.Double">
            <summary>
            Implicitly converts size to double
            </summary>
            <param name="a">The size to convert</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.UtilityHost">
            <summary>
            Provides static resources to utility-namespaced stuff
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.UtilityHost.DisableCustomDateTime">
            <summary>
            Restores all DateTime objects to their default display behavior
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.UtilityHost.DisableCustomTimeSpan">
            <summary>
            Restores all timespan objects to their default display behavior.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.UtilityHost.FormatDate">
            <summary>
            Formating string for date-style datetime objects.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.UtilityHost.FormatDateTime">
            <summary>
            Formating string for datetime-style datetime objects
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Utility.UtilityHost.FormatTime">
            <summary>
            Formating string for time-style datetime objects
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.UtilityHost.IsLike(System.String,System.String,System.Boolean)">
            <summary>
            Implement's VB's Like operator logic.
            </summary>
            <param name="CaseSensitive">Whether the comparison is case sensitive</param>
            <param name="Pattern">The pattern the string is compared with</param>
            <param name="String">The string that is being compared with a pattern</param>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.UtilityHost.CharListToSet(System.String)">
            <summary>
            Converts a string of characters to a HashSet of characters. If the string
            contains character ranges, such as A-Z, all characters in the range are
            also added to the returned set of characters.
            </summary>
            <param name="charList">Character list string</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Utility.Validation">
            <summary>
            Provides helper methods that aid in validating stuff.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Validation.IsLocalhost(System.String)">
            <summary>
            Tests whether a given string is the local host.
            Does NOT use DNS resolution, DNS aliases will NOT be recognized!
            </summary>
            <param name="Name">The name to test for being local host</param>
            <returns>Whether the name is localhost</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Validation.IsRecommendedInstanceName(System.String)">
            <summary>
            Tests whether a given string is a recommended instance name. Recommended names musst be legal, nbot on the ODBC list and not on the list of words likely to become reserved keywords in the future.
            </summary>
            <param name="InstanceName">The name to test. MAY contain server name, but will NOT test the server.</param>
            <returns>Whether the name is recommended</returns>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Validation.IsValidComputerTarget(System.String)">
            <summary>
            Tests whether a given string is a valid target for targeting as a computer. Will first convert from idn name.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Utility.Validation.IsValidInstanceName(System.String,System.Boolean)">
            <summary>
            Tests whether a given string is a valid instance name.
            </summary>
            <param name="InstanceName">The name to test. MAY contain server name, but will NOT test the server.</param>
            <param name="Lenient">Setting this to true will make the validation ignore default and mssqlserver as illegal names (as they are illegal names for named instances, but legal for targeting)</param>
            <returns>Whether the name is legal</returns>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.Validation.LinkedServerResult">
            <summary>
            The results of testing linked server connectivity as seen from the server that was linked to.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.ComputerName">
            <summary>
            The name of the server running the tests
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.InstanceName">
            <summary>
            The name of the instance running the tests
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.SqlInstance">
            <summary>
            The full name of the instance running the tests
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.LinkedServerName">
            <summary>
            The name of the linked server, the connectivity with whom was tested
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.RemoteServer">
            <summary>
            The name of the remote computer running the linked server.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.Connectivity">
            <summary>
            The test result
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.Result">
            <summary>
            Text interpretation of the result. Contains error messages if the test failed.
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.#ctor">
            <summary>
            Creates an empty object
            </summary>
        </member>
        <member name="M:Sqlcollaborative.Dbatools.Validation.LinkedServerResult.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Creates a test result with prefilled values
            </summary>
            <param name="ComputerName">The name of the server running the tests</param>
            <param name="InstanceName">The name of the instance running the tests</param>
            <param name="SqlInstance">The full name of the instance running the tests</param>
            <param name="LinkedServerName">The name of the linked server, the connectivity with whom was tested</param>
            <param name="RemoteServer">The name of the remote computer running the linked server.</param>
            <param name="Connectivity">The test result</param>
            <param name="Result">Text interpretation of the result. Contains error messages if the test failed.</param>
        </member>
        <member name="T:Sqlcollaborative.Dbatools.General.ExecutionMode">
            <summary>
            What kind of mode do you want to run a command in?
            This allows the user to choose how a dbatools function handles a bump in the execution where terminating directly may not be actually mandated.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.General.ExecutionMode.Strict">
            <summary>
            When encountering issues, terminate, or skip the currently processed input, rather than continue.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.General.ExecutionMode.Lazy">
            <summary>
            Continue as able with a best-effort attempt. Simple verbose output should do the rest.
            </summary>
        </member>
        <member name="F:Sqlcollaborative.Dbatools.General.ExecutionMode.Report">
            <summary>
            Continue, but provide output that can be used to identify the operations that had issues.
            </summary>
        </member>
    </members>
</doc>
